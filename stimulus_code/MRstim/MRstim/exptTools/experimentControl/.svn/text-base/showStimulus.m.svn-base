function [response, timing] = showStimulus(display,stimulus,runPriority,showTiming)%% [response, timing] = showStimulus(display,stimulus,runPriority,showTiming)%%  % HISTORY:% 2005.02.23 RFD: ported from showStimulus.% 2008.05.13 JW: modified to allow timing to be controlled by%                   stimulus.seqtiming if the field exists. if nargin==0	help(mfilename);endif ~exist('runPriority')	runPriority = 0;  %use the nicest priority by defaultendif ~exist('showTiming')	showTiming = 0;endif ~isfield(stimulus,'textures')	% Generate textures for each image	disp('WARNING: Creating textures before stimulus presentation.');	disp(['         This should be done before calling ' mfilename ' for']);	disp('         accurate timing.  See "makeTextures" for help.');	stimulus = makeTextures(display,stimulus);endnFrames = length(stimulus.seq);HideCursor;nGamma = size(stimulus.cmap,3);nImages = length(stimulus.textures);response.keyCode = [];response.secs = [];Priority(runPriority);s = GetSecs;for frame = 1:nFrames		if ~isfield(stimulus, 'fixSeq')  || isempty(stimulus.fixSeq),        colindex = 1; else colindex = stimulus.fixSeq(frame);     end        if stimulus.seq(frame)>0        % put in an image		imgNum = mod(stimulus.seq(frame)-1,nImages)+1;		Screen('DrawTexture', display.windowPtr, stimulus.textures(imgNum), stimulus.srcRect, stimulus.destRect);        drawFixation(display, colindex);        timing = GetSecs - s;        Screen('Flip', display.windowPtr);    elseif stimulus.seq(frame)<0        % put in a color table		gammaNum = mod(-stimulus.seq(frame)-1,nGamma)+1;        drawFixation(display, colindex);        Screen('Flip', display.windowPtr);		Screen('LoadNormalizedGammaTable', display.windowPtr, stimulus.cmap(:,:,gammaNum));    else        % Do nothing, except wait a frame.		Screen('Flip', display.windowPtr);    end    % Scan the keyboard    [keyIsDown,secs,keyCode] = KbCheck;    if(keyIsDown)        response.keyCode = keyCode;        response.secs = secs;    end        if ~isfield(stimulus, 'seqtiming')  || isempty(stimulus.seqtiming),        %don't wait    else        waitTime = (GetSecs-s)-stimulus.seqtiming(frame);        while(waitTime<0),            % if there is time release cpu            if(waitTime<-0.02),                WaitSecs(0.01);            end;            % timing            waitTime = (GetSecs-s)-stimulus.seqtiming(frame);        end    end     endtiming = GetSecs-s;if showTiming	disp(['Stimulus run time: ',num2str(timing),' seconds.']);endPriority(0);